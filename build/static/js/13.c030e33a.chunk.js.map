{"version":3,"sources":["components/downloadBtn/index.js","pages/hotword/hotwordUpdate/style.js","pages/hotword/hotwordUpdate/index.js"],"names":["FileDown","props","handleDownFile","event","api_url","fileName","preventDefault","stopPropagation","setState","loadingStatus","buttonDisabled","instance","axios","create","baseURL","responseType","timeout","headers","url","get","then","res","console","log","backEndFileName","split","replace","length","loadTxtFile","data","catch","error","state","content","aLink","document","createElement","blob","Blob","type","download","href","URL","createObjectURL","body","appendChild","evt","createEvent","initEvent","dispatchEvent","removeChild","revokeObjectURL","this","text","style","className","btnType","btnDisabled","placement","title","onClick","disabled","loading","size","icon","PureComponent","proTypes","PropTypes","isRequired","defaultProps","ContentWapper","styled","main","ContentBox","div","InfoItem","InlineInfoItem","InfoLabel","label","InfoContent","FixBox","FixInputBox","FixOutputBox","AudioPlayer","audio","FixInputBoxItem","HotwordUpdate","fileList","uploading","modelStatus","modelType","handleUpload","name","formData","FormData","append","_this","post","a","url2","task_id","res2","task_status","handleFix","result","window","clearInterval","timer","message","success","setInterval","f1","handleChangeHotword","words","hot_value","params","timer2","reload","renderUserAudioInfo","userAudio","controls","componentDidMount","key","values","selectedProject","projects","hotwordCorrections","rulesFixResult","handleChangeSelectedProject","fileProps","accept","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","width","value","onChange","map","item","Option","display_name","position","right","TextArea","rows","placeholder","paddingLeft","layout","onFinish","Item","rules","required","min","max","shouldUpdate","htmlType","display","alignItems","flexDirection","justifyContent","height","float","UploadOutlined","pageInit","Component","connect","getIn","dispatch","actionCreators","handlePageInit","project","changeFixResult"],"mappings":"iNAiBMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA8BVC,eAAiB,SAACC,EAAOC,EAAQC,GAC7BF,EAAMG,iBACNH,EAAMI,kBAEN,EAAKC,SAAS,CACVC,eAAe,EACfC,gBAAgB,IAGpB,IAAIC,EAAWC,IAAMC,OAAO,CACxBC,QAAQ,4BACRC,aAAa,OACbC,QAAQ,IACRC,QAAQ,CAAC,eAAe,yBAExBC,EAAMd,EAEVO,EAASQ,IAAID,GAAKE,MAAK,SAAAC,GACnBC,QAAQC,IAAIF,GACZ,IAAIG,EAAkB,GACnBH,EAAIJ,UAEHO,EAAkBH,EAAIJ,QAAQ,uBAAuBQ,MAAM,aAAa,GAAGC,QAAQ,KAAK,IACxFJ,QAAQC,IAAIC,IAEbA,EAAgBG,OAAO,IACtBtB,EAAWmB,GAEf,EAAKI,YAAYvB,EAASgB,EAAIQ,KAAKX,GACnC,EAAKV,SAAS,CACVC,eAAe,EACfC,gBAAgB,OAErBoB,OAAM,SAACC,GAEN,EAAKvB,SAAS,CACVC,eAAe,EACfC,gBAAgB,IAEpBY,QAAQC,IAAI,uCAAUQ,OApE1B,EAAKC,MAAQ,CACTvB,eAAe,EACfC,gBAAgB,GAJL,E,wDAQPL,EAAU4B,EAAQf,GAC1BI,QAAQC,IAAIU,GACZ,IAAIC,EAAQC,SAASC,cAAc,KAC/BC,EAAO,IAAIC,KAAK,CAACL,GAAU,CAC3BM,KAAM,6BAEVL,EAAMM,SAAWnC,EACjB6B,EAAMO,KAAOC,IAAIC,gBAAgBN,GAIjCF,SAASS,KAAKC,YAAYX,GAC1B,IAAIY,EAAMX,SAASY,YAAY,eAC/BD,EAAIE,UAAU,SAAS,GAAO,GAC9Bd,EAAMe,cAAcH,GACpBX,SAASS,KAAKM,YAAYhB,GAE1BQ,IAAIS,gBAAgBd,K,+BAiDhB,IAAD,SACkEe,KAAKnD,MAAvEG,EADA,EACAA,QAASiD,EADT,EACSA,KAAMC,EADf,EACeA,MAAOC,EADtB,EACsBA,UAAWC,EADjC,EACiCA,QAASnD,EAD1C,EAC0CA,SAASoD,EADnD,EACmDA,YADnD,EAEiCL,KAAKpB,MAAtCvB,EAFA,EAEAA,cAAeC,EAFf,EAEeA,eAEtB,MAAa,YAAV8C,EAEK,kBAAC,IAAD,CAASE,UAAU,aAAaC,MAAON,GACnC,kBAAC,IAAD,CACId,KAAK,UACLe,MAAOA,EACPC,UAAWA,EACXK,QAAS,SAACzD,GAAD,OAAW,EAAKD,eAAeC,EAAOC,EAAQC,IACvDwD,SAAUnD,GAAgB+C,EAC1BK,SAAUrD,EACVsD,KAAK,QACLC,KAAM,kBAAC,IAAD,SAMpB,kBAAC,IAAD,CACEzB,KAAK,UACLe,MAAOA,EAEPC,UAAWA,EACXK,QAAS,SAACzD,GAAD,OAAW,EAAKD,eAAeC,EAAOC,EAASC,IACxDwD,SAAUnD,GAAgB+C,EAC1BK,SAAUrD,GAETA,EAAgB4C,EAAO,6B,GAzGTY,iBAgHvBjE,EAASkE,SAAW,CAClB9D,QAAS+D,IAAUC,YAGrBpE,EAASqE,aAAe,CACtBhB,KAAM,2BACNW,KAAM,WACNT,UAAW,GACXE,aAAY,GAECzD,O,giGCzIR,IAAMsE,EAAgBC,IAAOC,KAAV,KAGbC,EAAaF,IAAOG,IAAV,KAOVC,EAAWJ,IAAOG,IAAV,KA4BRE,EAAiBL,IAAOG,IAAV,KA2BdG,EAAYN,IAAOO,MAAV,KAKTC,EAAcR,IAAOG,IAAV,KAYXM,GANYT,IAAOG,IAAV,KAMAH,IAAOG,IAAV,MAINO,EAAcV,IAAOG,IAAV,KAKXQ,EAAeX,IAAOG,IAAV,KAUZS,GALSZ,IAAOG,IAAV,KAKQH,IAAOa,MAAV,MAIXC,EAAkBd,IAAOG,IAAV,K,GAeIH,IAAOO,MAAV,K,kBC1GvBQ,G,4MAEFtD,MAAQ,CACJuD,SAAU,GACVC,WAAW,EACXC,aAAY,EACZC,UAAU,I,EAEdC,aAAe,SAACC,GAAU,IACdL,EAAa,EAAKvD,MAAlBuD,SACFM,EAAW,IAAIC,SAIrBD,EAASE,OAAO,OAAQR,EAAS,IAEjC,EAAK/E,SAAS,CACZgF,WAAW,IAEb,IAAMQ,EAAK,eACX1E,QAAQC,IAAIsE,GAEZ,IAAI3E,EAAM,sBAAsB0E,EAAK,IAClCL,EAAS5D,OAAO,GAEAf,IAAMC,OAAO,CACxBC,QAAQ,4BACRE,QAAQ,IACRC,QAAQ,CAAC,eAAe,yBAEnBgF,KAAK/E,EAAI2E,GAAUzE,MAAK,SAAAC,GAAK,4CAIlC,4BAAA6E,EAAA,6DACQC,EAAO,gDAAgDP,EAAK,aAAavE,EAAIQ,KAAKA,KAAKuE,QAC3F9E,QAAQC,IAAI4E,GAFhB,SAGUhF,YAAI,CAACD,IAAIiF,IAAO/E,MAAK,SAACiF,GACxB/E,QAAQC,IAAI8E,GAEkB,YAA3BA,EAAKxE,KAAK,GAAGyE,cACZN,EAAM/F,MAAMsG,UAAUF,EAAKxE,KAAK,GAAG2E,QACnCR,EAAMxF,SAAS,CACX+E,SAAU,GACVC,WAAW,IAEfiB,OAAOC,cAAcC,IAEK,WAA3BN,EAAKxE,KAAK,GAAGyE,cACZN,EAAM/F,MAAMsG,UAAUF,EAAKxE,KAAK,GAAG2E,QACnCR,EAAMxF,SAAS,CACXgF,WAAW,IAEfoB,IAAQ7E,MAAM,0DACd0E,OAAOC,cAAcC,OApBjC,4CAJkC,sBAClCrF,QAAQC,IAAIF,GACZuF,IAAQC,QAAQ,4EA0BhB,IAAIF,EAAQG,aAAY,kBA5BU,0CA4BLC,KAAM,QAEpCjF,OAAM,SAAAT,GACL,EAAKb,SAAS,CACZgF,WAAW,IAEboB,IAAQ7E,MAAM,4C,EAW1BiF,oBAAoB,SAACC,EAAMrB,GAAmB,IAAdrD,EAAa,uDAAR,MACvB,SAAPA,IACC0E,EAAMC,WAAaD,EAAMC,WAE7B,EAAK1G,SAAS,CACViF,aAAa,EACbC,UAAUnD,IAGd,IAAMyD,EAAK,eACP9E,EAAM,uBAAuB0E,EAAK,IACnCqB,GACChB,YAAK,CACD/E,MACAiG,OAAO,CACHvB,OACAqB,MAAM,CAACA,MAEZ7F,MAAK,SAAAC,GAAK,4CAET,4BAAA6E,EAAA,6DACQC,EAAO,mDAAmDP,EAAK,aAAavE,EAAIQ,KAAKuE,QAEzF9E,QAAQC,IAAI4E,GAHhB,SAIUhF,YAAI,CAACD,IAAIiF,IAAO/E,MAAK,SAACiF,GACxB/E,QAAQC,IAAI8E,GAEkB,YAA3BA,EAAKxE,KAAK,GAAGyE,cACZN,EAAM/F,MAAMsG,UAAUF,EAAKxE,KAAK,GAAG2E,QACnCR,EAAMxF,SAAS,CACXiF,aAAa,EACbC,UAAU,KAEde,OAAOC,cAAcU,GACrBpB,EAAMqB,SACNT,IAAQC,QAAQ,+CAEU,WAA3BR,EAAKxE,KAAK,GAAGyE,cACZN,EAAM/F,MAAMsG,UAAUF,EAAKxE,KAAK,GAAG2E,QACnCR,EAAMxF,SAAS,CACXiF,aAAa,EACbC,UAAU,KAEde,OAAOC,cAAcU,GAErBR,IAAQ7E,MAAM,oHAzB1B,4CAFS,sBACTT,QAAQC,IAAIF,GA8BZ,IAAI+F,EAASN,aAAY,kBA/BhB,0CA+BqBC,KAAM,QAErCjF,S,EAcXwF,oBAAoB,SAAAC,GAChB,OAAGA,IAAY,GAEP,kBAAC,WAAD,KACI,kBAACpC,EAAD,CAAaqC,UAAQ,IACrB,kBAAC,IAAD,CAAQjF,KAAK,WAAb,iBAKJ,kBAAC,WAAD,O,EAsOZ8E,OAAS,WACL,EAAKI,qB,uDAtTAC,GACLpG,QAAQC,IAAImG,K,+BAyDPC,GACLrG,QAAQC,IAAIoG,K,yCAGG/B,GACf,IAAI1E,EAAI,2CAA2C0E,EACnDzE,YAAI,CAACD,QAAME,MAAK,SAAAC,GACZC,QAAQC,IAAIF,Q,+BAqBX,IAAD,SACgG+B,KAAKnD,MAAjG2H,EADJ,EACIA,gBAAiBC,EADrB,EACqBA,SAASC,EAD9B,EAC8BA,mBAAmBC,EADjD,EACiDA,eAAeC,EADhE,EACgEA,4BADhE,EAEkD5E,KAAKpB,MAAnDwD,EAFJ,EAEIA,UAAWD,EAFf,EAEeA,SAASE,EAFxB,EAEwBA,YAAYC,EAFpC,EAEoCA,UAElCuC,EAAY,CACdC,OAAO,YACPC,SAAU,SAAAC,GACN,EAAK5H,UAAS,SAAAwB,GACd,IAAMqG,EAAQrG,EAAMuD,SAAS+C,QAAQF,GAC/BG,EAAcvG,EAAMuD,SAASiD,QAEnC,OADAD,EAAYE,OAAOJ,EAAO,GACnB,CACH9C,SAAUgD,OAIlBG,aAAc,SAAAN,GAMV,OALA,EAAK5H,UAAS,SAAAwB,GAAK,MAAK,CACpBuD,SAAS,GAAD,mBAAMvD,EAAMuD,UAAZ,CAAsB6C,QAGlBA,EAAKrE,KAAO,KAAO,MAAQ,KAEvC6C,IAAQ7E,MAAM,mEACd,EAAKoG,SAASC,KAGX,GAEX7C,YAEJ,OACI,kBAACjB,EAAD,KACI,kBAACG,EAAD,KACI,kBAACE,EAAD,KACI,kBAACE,EAAD,iCAGA,kBAACE,EAAD,KACI,kBAAC,IAAD,CAAQzB,MAAO,CAAEqF,MAAO,KAAOC,MAAOhB,EAAgBhC,KAAMiD,SAAUb,GACjEH,EAASiB,KAAI,SAAAC,GAAI,OACd,kBAAC,IAAOC,OAAR,CAAetB,IAAKqB,EAAKnD,KAAMgD,MAAOG,EAAKnD,MAAOmD,EAAKE,mBAKnE,kBAAC,KAAD,CACI3F,MAAO,CAAE4F,SAAS,WAAYC,MAAM,KACpC/I,QAAS,2CAA2CwH,EAAgBhC,KACpEvC,KAAK,uCACLhD,SAAUuH,EAAgBhC,KAAK,yBAGvC,kBAACjB,EAAD,KACI,kBAACE,EAAD,iCACA,kBAACE,EAAD,KAII,kBAAC,IAAMqE,SAAP,CAAgBR,MAAOd,EAAoBjE,UAAQ,EAACP,MAAO,CAAEqF,MAAO,QAAUU,KAAM,EAAGC,YAAY,OAI3G,kBAAC1E,EAAD,CAAgBtB,MAAO,CAACiG,YAAY,SAChC,kBAAC,IAAD,CAAM3D,KAAK,aAAa4D,OAAO,SAC3BC,SAAU,SAACb,GAAD,OAAS,EAAK5B,oBAAoB4B,EAAMhB,EAAgBhC,KAAK,SAEvE,kBAAC,IAAK8D,KAAN,CACI9D,KAAK,OACLd,MAAM,eACN6E,MAAO,CAAC,CAAEC,UAAU,EAAMhD,QAAS,qCAEnC,kBAAC,IAAD,OAEJ,kBAAC,IAAK8C,KAAN,CACI9D,KAAK,YACLd,MAAM,2BACN6E,MAAO,CAAC,CAAEC,UAAU,EAAMhD,QAAS,iDAEnC,kBAAC,IAAD,CAAaiD,IAAK,EAAGC,IAAK,OAE9B,kBAAC,IAAKJ,KAAN,CAAWK,cAAc,IACpB,kBACD,kBAAC,IAAD,CACIC,SAAS,SACTzH,KAAK,SACLuB,QAAS2B,GAAyB,QAAZC,EACtB7B,SAAsB,SAAZ6B,GAGTD,GAAyB,QAAZC,EAAkB,iCAAQ,iCAMxD,kBAACd,EAAD,CAAgBtB,MAAO,CAACiG,YAAY,SAChC,kBAAC,IAAD,CAAM3D,KAAK,cAAc4D,OAAO,SAC5BC,SAAU,SAACb,GAAD,OAAS,EAAK5B,oBAAoB4B,EAAMhB,EAAgBhC,KAAK,UAEvE,kBAAC,IAAK8D,KAAN,CACI9D,KAAK,OACLd,MAAM,eACN6E,MAAO,CAAC,CAAEC,UAAU,EAAMhD,QAAS,qCAEnC,kBAAC,IAAD,OAEJ,kBAAC,IAAK8C,KAAN,CACI9D,KAAK,YACLd,MAAM,2BACN6E,MAAO,CAAC,CAAEC,UAAU,EAAMhD,QAAS,iDAEnC,kBAAC,IAAD,CAAaiD,IAAK,EAAGC,IAAK,OAE9B,kBAAC,IAAKJ,KAAN,CAAWK,cAAc,IACpB,kBACD,kBAAC,IAAD,CACIC,SAAS,SACTzH,KAAK,UACLuB,QAAS2B,GAAyB,SAAZC,EACtB7B,SAAsB,QAAZ6B,GAETD,GAAyB,SAAZC,EAAmB,iCAAQ,iCAMzD,kBAACV,EAAD,KACI,kBAACC,EAAD,CAAa3B,MAAO,CAChB2G,QAAS,OACTC,WAAY,SACZC,cAAe,SACfC,eAAgB,SAChBC,OAAQ,UAER,kBAAChF,EAAD,KAMI,kBAAC,KAAD,CACI9B,UAAU,SACVD,MAAO,CAAEgH,MAAM,SACflK,QAAS,+CACTiD,KAAK,uCACLhD,SAAU,yBAGlB,kBAACgF,EAAD,KAqCI,kBAAC,IAAW4C,EACR,kBAAC,IAAD,CAAQ1E,UAAU,UACd,kBAACgH,EAAA,EAAD,MADJ,0CAKR,kBAAClF,EAAD,KACI,kBAAC,IAAD,CACI9C,KAAK,UACLgB,UAAU,SACVK,QAAS,kBAAI,EAAK+B,aAAaiC,EAAgBhC,OAE/C9B,QAAS0B,EACT3B,SAAU4B,GAETD,EAAY,qBAAQ,8BAIjC,kBAACN,EAAD,KACI,kBAAC,IAAMkE,SAAP,CAAgBvF,UAAQ,EAAE+E,MAAOb,EAAgBzE,MAAO,CAAEqF,MAAO,QAAUU,KAAM,EAAGC,YAAY,mC,0CAYpHlG,KAAKnD,MAAMuK,e,GAxXSC,aAsZbC,uBArBS,SAAC1I,GACrB,MAAO,CACH6F,SAAU7F,EAAM2I,MAAM,CAAC,UAAU,aACjC7C,mBAAoB9F,EAAM2I,MAAM,CAAC,UAAU,gBAC3C/C,gBAAiB5F,EAAM2I,MAAM,CAAC,UAAU,oBACxC5C,eAAgB/F,EAAM2I,MAAM,CAAC,UAAU,uBAI3B,SAACC,GAAD,MAAc,CAC9BJ,SAD8B,WAE1BI,EAASC,IAAeC,mBAE5B9C,4BAJ8B,SAIF+C,GACxBH,EAASC,IAAe7C,4BAA4B+C,KAExDxE,UAP8B,SAOpBC,GACNoE,EAASC,IAAeG,gBAAgBxE,QAIjCkE,CAAqCpF","file":"static/js/13.c030e33a.chunk.js","sourcesContent":["/**\n * @desc:这是一个文件下载组件\n * @param:参数说明\n *    api_url:接口地址\n *    icon: 下载图片设置\n *    text: 下载文本设置\n *    downFileBtnClass: 按钮样式设置\n * \n */\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Tooltip} from 'antd';\nimport {\n    DownloadOutlined\n} from '@ant-design/icons';\nimport axios from 'axios'\n\nclass FileDown extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingStatus: true,\n            buttonDisabled: false\n        }\n    }\n\n    loadTxtFile(fileName, content,url){\n        console.log(content)\n        let aLink = document.createElement('a');\n        let blob = new Blob([content], {\n            type: 'application/octet-stream'\n        });\n        aLink.download = fileName;\n        aLink.href = URL.createObjectURL(blob)\n        // aLink.href = url\n        // aLink.click();\n        //此写法兼容可火狐浏览器\n        document.body.appendChild(aLink);\n        var evt = document.createEvent(\"MouseEvents\");\n        evt.initEvent(\"click\", false, false);\n        aLink.dispatchEvent(evt);\n        document.body.removeChild(aLink)\n\n        URL.revokeObjectURL(blob);\n        \n\n    }\n\n    //文件下载操作\n    handleDownFile = (event, api_url,fileName) => {\n        event.preventDefault();\n        event.stopPropagation();\n        //开启loading 按钮置灰\n        this.setState({\n            loadingStatus: false,\n            buttonDisabled: true,\n        });\n\n        let instance = axios.create({\n            baseURL:'http://10.186.0.210:8001/',\n            responseType:'blob',\n            timeout:10000,\n            headers:{\"Content-Type\":\"multipart/form-data\"}\n        })\n        let url = api_url\n\n        instance.get(url).then(res=>{\n            console.log(res)\n            let backEndFileName = \"\"\n            if(res.headers){\n                // let regex1 = /\"(.+?)\"/g;   // \"\" \n                backEndFileName = res.headers['content-disposition'].split('filename=')[1].replace(/\"/g,\"\")\n                console.log(backEndFileName)\n            }\n            if(backEndFileName.length>0){\n                fileName = backEndFileName\n            }\n            this.loadTxtFile(fileName,res.data,url)\n            this.setState({\n                loadingStatus: true,\n                buttonDisabled: false,\n            });\n        }).catch((error) => {\n            //关闭loading 按钮恢复正常\n            this.setState({\n                loadingStatus: false,\n                buttonDisabled: false,\n            });\n            console.log('文件下载失败', error);\n        })\n    };\n\n  render() {\n    const {api_url, text, style, className, btnType, fileName,btnDisabled} = this.props;\n    const {loadingStatus, buttonDisabled} = this.state;\n    // btnType 用于展现不同的下载样式 分为iconBtn wordBtn \n    if(btnType==='iconBtn'){\n        return(\n            <Tooltip placement=\"bottomLeft\" title={text}>\n                <Button \n                    type=\"primary\" \n                    style={style}\n                    className={className}\n                    onClick={(event) => this.handleDownFile(event, api_url,fileName)}\n                    disabled={buttonDisabled||btnDisabled}\n                    loading={!loadingStatus}\n                    size=\"small\" \n                    icon={<DownloadOutlined />}\n                />\n            </Tooltip>\n        )\n    }\n    return (\n      <Button\n        type=\"primary\"\n        style={style}\n        // icon={<DownloadOutlined />}\n        className={className}\n        onClick={(event) => this.handleDownFile(event, api_url, fileName)}\n        disabled={buttonDisabled||btnDisabled}\n        loading={!loadingStatus}\n      >\n        {loadingStatus ? text : '下载中...'}\n      </Button>\n    );\n  }\n}\n\n//定义属性 类型以及是否必填项\nFileDown.proTypes = {\n  api_url: PropTypes.isRequired\n};\n//定义属性的默认值\nFileDown.defaultProps = {\n  text: '文件下载',\n  icon: 'download',\n  className: {},\n  btnDisabled:false\n};\nexport default FileDown;","import styled from 'styled-components';\n\nexport const ContentWapper = styled.main`\n    margin:30px 10px 0;\n`\nexport const ContentBox = styled.div`\n    min-width: 900px; \n    background:#fff;\n    padding: 40px;\n    min-height: calc(100vh - 156px);\n`\n\nexport const InfoItem = styled.div`\n    margin-bottom: 10px;\n    position:relative;\n    // padding: 0 40px 0 0;\n    font-size:14px;\n    // overflow:hidden;\n    & *{\n        display:inline-block;\n        vertical-align: text-top;\n    }\n    & .ant-input{\n        width:200px;\n    }\n    & .ant-btn{\n        margin-left:30px;\n    }\n\n    & .add-btn{\n        background: #52c41a;\n        border-color: #52c41a;\n        color: #fff;\n    }\n    & .add-btn:focus,.add-btn:hover{\n        background: #74d445;\n        border-color: #74d445;\n    }\n`\n\nexport const InlineInfoItem = styled.div`\n    margin-bottom: 10px;\n    padding: 0 40px 0 0;\n    & .ant-input{\n        width:200px;\n    }\n    & .ant-btn{\n        margin-left:30px;\n    }\n\n    & .add-btn{\n        background: #52c41a;\n        border-color: #52c41a;\n        color: #fff;\n    }\n    & .add-btn:focus,.add-btn:hover{\n        background: #74d445;\n        border-color: #74d445;\n    }\n    & .ant-form-item-with-help{\n        margin-bottom:0;\n    }\n    & .ant-form-item-explain{\n        margin-left:10px;\n    }\n`\n\nexport const InfoLabel = styled.label`\n    width:65px;\n    text-align:right;\n    margin-right:15px;\n`\nexport const InfoContent = styled.div`\n    // position:relative;\n    vertical-align: top;\n    display:inline-block;\n    width:calc(100% - 80px);\n`\nexport const ChangeBtn = styled.div`\n    position: absolute;\n    right: 0;\n    z-index: 100;\n`\n\nexport const FixBox = styled.div`\n    margin:20px 40px;\n`\n\nexport const FixInputBox = styled.div`\n    float: left;\n    width: 50%;\n`\n\nexport const FixOutputBox = styled.div`\n    display: inline-block;\n    width: 50%;\n`\n\nexport const FixBtn = styled.div`\n    text-align: center;\n    margin: 20px;\n`\n\nexport const AudioPlayer = styled.audio`\n\n`\n\nexport const FixInputBoxItem = styled.div`\n    display:flex;\n    align-items: center;\n    font-size:14px;\n    margin-bottom:15px;\n\n    & .fixBtn{\n        width:138px;\n    }\n\n    & p.ant-upload-drag-icon{\n        margin-bottom:10px;\n    }\n`\n\nexport const FixInputBoxLabel = styled.label`\n    width:80px;\n    text-align:right;\n    margin-right:15px;\n    &+span{\n        width:56%;\n        \n    }\n`\n\n","import React, {Component, Fragment} from 'react'\nimport {connect} from 'react-redux'\nimport { Input, Select, Button, message,Upload,Form,InputNumber } from 'antd';\n\nimport axios from 'axios';\n// import { FireOutlined } from '@ant-design/icons';\n\nimport {actionCreators} from './store'\nimport { post,get } from '../../../utils/ajax'\nimport { ContentWapper,ContentBox,InfoItem,InfoLabel,InfoContent,FixBox,FixInputBox,FixOutputBox,AudioPlayer,FixInputBoxItem,InlineInfoItem } from './style'\nimport {\n    UploadOutlined\n} from '@ant-design/icons';\nimport DownloadBtn from '../../../components/downloadBtn'\n\n\nclass HotwordUpdate extends Component{\n\n    state = {\n        fileList: [],\n        uploading: false,\n        modelStatus:false,\n        modelType:''\n    };\n    handleUpload = (name) => {\n        const { fileList } = this.state;\n        const formData = new FormData();\n        // fileList.forEach(file => {\n        //   formData.append('file', file);\n        // });\n        formData.append('file', fileList[0]);\n    \n        this.setState({\n          uploading: true,\n        });\n        const _this = this\n        console.log(formData)\n\n        let url = \"api/v1/hotword/fix/\"+name+\"/\"\n        if(fileList.length>0){\n\n            let instance = axios.create({\n                baseURL:'http://10.186.0.210:8001/',\n                timeout:1000,\n                headers:{\"Content-Type\":\"multipart/form-data\"}\n            })\n            instance.post(url,formData).then(res=>{\n                console.log(res)\n                message.success('上传音频成功，等待识别！')\n                \n                async function f1(){\n                    let url2 = '/10.186.0.210:8001/api/v1/hotword/fix-status/'+name+'/?task_id='+res.data.data.task_id\n                    console.log(url2)\n                    await get({url:url2}).then((res2)=>{\n                        console.log(res2)\n\n                        if(res2.data[0].task_status===\"SUCCESS\"){\n                            _this.props.handleFix(res2.data[0].result)\n                            _this.setState({\n                                fileList: [],\n                                uploading: false,\n                            });\n                            window.clearInterval(timer)\n                        }\n                        if(res2.data[0].task_status===\"FAILED\"){\n                            _this.props.handleFix(res2.data[0].result)\n                            _this.setState({\n                                uploading: false,\n                            });\n                            message.error(\"识别失败，请重试！\")\n                            window.clearInterval(timer)\n                        }\n                    })\n                }\n                let timer = setInterval(()=> f1(), 10000)\n                \n            }).catch(res=>{\n                this.setState({\n                  uploading: false,\n                });\n                message.error('上传音频失败');\n            })\n        }\n      };\n\n\n\n    callback(key) {\n        console.log(key);\n    }\n\n    handleChangeHotword=(words,name,type=\"hot\")=>{\n        if(type==='cold'){\n            words.hot_value = -words.hot_value\n        }\n        this.setState({\n            modelStatus: true,\n            modelType:type\n          });\n\n        const _this = this\n        let url = \"api/v1/hotword/conf/\"+name+\"/\"\n        if(words){\n            post({\n                url,\n                params:{\n                    name,\n                    words:[words]\n                }\n            }).then(res=>{\n                console.log(res)\n                async function f1(){\n                    let url2 = '/10.186.0.210:8001/api/v1/hotword/update-status/'+name+'/?task_id='+res.data.task_id\n                \n                    console.log(url2)\n                    await get({url:url2}).then((res2)=>{\n                        console.log(res2)\n\n                        if(res2.data[0].task_status===\"SUCCESS\"){\n                            _this.props.handleFix(res2.data[0].result)\n                            _this.setState({\n                                modelStatus: false,\n                                modelType:''\n                            });\n                            window.clearInterval(timer2)\n                            _this.reload()\n                            message.success('热词更新成功！')\n                        }\n                        if(res2.data[0].task_status===\"FAILED\"){\n                            _this.props.handleFix(res2.data[0].result)\n                            _this.setState({\n                                modelStatus: false,\n                                modelType:''\n                            });\n                            window.clearInterval(timer2)\n                            // _this.reload()\n                            message.error(\"更新失败，本次更新将在下次提交时生效\")\n                        }\n                    })\n                }\n                let timer2 = setInterval(()=> f1(), 1000)\n                \n            }).catch()\n        }\n    }\n    onFinish(values){\n        console.log(values)\n    }\n\n    handleDownloadConf(name){\n        let url=\"api/v1/hotword/download/?type=conf&name=\"+name\n        get({url}).then(res=>{\n            console.log(res)\n        })\n    }\n\n    renderUserAudioInfo=userAudio=>{\n        if(userAudio!=={}){\n            return(\n                <Fragment>\n                    <AudioPlayer controls></AudioPlayer>\n                    <Button type=\"primary\">识别</Button>\n                </Fragment>\n            )\n        }else{\n            return(\n                <Fragment>\n\n                </Fragment>\n            )\n        }  \n    }\n\n    render(){\n        const { selectedProject, projects,hotwordCorrections,rulesFixResult,handleChangeSelectedProject } = this.props;\n        const { uploading, fileList,modelStatus,modelType } = this.state;\n\n        const fileProps = {\n            accept:\".wav,.pcm\",\n            onRemove: file => {\n                this.setState(state => {\n                const index = state.fileList.indexOf(file);\n                const newFileList = state.fileList.slice();\n                newFileList.splice(index, 1);\n                return {\n                    fileList: newFileList,\n                };\n                });\n            },\n            beforeUpload: file => {\n                this.setState(state => ({\n                    fileList: [...state.fileList, file],\n                }));\n\n                const isLt10M = file.size / 1024 / 1024 <= 10;\n                if (!isLt10M) {\n                    message.error(\"文件大小限制在10M以下！\");\n                    this.onRemove(file);\n                    return false;\n                }\n                return false;\n            },\n            fileList,\n        };\n        return(\n            <ContentWapper>\n                <ContentBox>\n                    <InfoItem>\n                        <InfoLabel>\n                            项目名称\n                        </InfoLabel>\n                        <InfoContent>\n                            <Select style={{ width: 200 }} value={selectedProject.name} onChange={handleChangeSelectedProject}>\n                                {projects.map(item=>(\n                                    <Select.Option key={item.name} value={item.name}>{item.display_name}</Select.Option>\n                                ))}\n                            </Select>\n                        </InfoContent>\n                        {/* <Button style={{ float:'right' }} onClick={()=>this.handleDownloadConf(selectedProject.name)} type=\"primary\">下载配置文件</Button> */}\n                        <DownloadBtn\n                            style={{ position:'absolute', right:'0' }}\n                            api_url={\"api/v1/hotword/download/?type=conf&name=\"+selectedProject.name}\n                            text=\"下载配置文件\"\n                            fileName={selectedProject.name+'_hotword_config.txt'}\n                        />\n                    </InfoItem>\n                    <InfoItem>\n                        <InfoLabel>热词配置</InfoLabel>\n                        <InfoContent>\n                            {/* <ChangeBtn>\n                                <Button type=\"primary\">修改</Button>\n                            </ChangeBtn> */}\n                            <Input.TextArea value={hotwordCorrections} disabled style={{ width: '100%' }} rows={4} placeholder=\"\" />\n                        </InfoContent>\n                    </InfoItem>\n\n                    <InlineInfoItem style={{paddingLeft:'28px'}}>\n                        <Form name=\"addhotForm\" layout=\"inline\" \n                            onFinish={(value)=>this.handleChangeHotword(value,selectedProject.name,\"hot\")}\n                        >\n                            <Form.Item\n                                name=\"word\"\n                                label=\"热词\"\n                                rules={[{ required: true, message: '请输入热词!' }]}\n                            >\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"hot_value\"\n                                label=\"增加热度\"\n                                rules={[{ required: true, message: '请输入热词热度!' }]}\n                            >\n                                <InputNumber min={1} max={100}/>\n                            </Form.Item>\n                            <Form.Item shouldUpdate={true}>\n                                {() => (\n                                <Button\n                                    htmlType=\"submit\"\n                                    type=\"danger\"\n                                    loading={modelStatus&&modelType==='hot'}\n                                    disabled={modelType==='cold'}\n                                    // icon={<FireOutlined />}\n                                >\n                                    {modelStatus&&modelType==='hot'?'热度训练中':'增加热度'}\n                                </Button>\n                                )}\n                            </Form.Item>\n                        </Form>\n                    </InlineInfoItem>\n                    <InlineInfoItem style={{paddingLeft:'28px'}}>\n                        <Form name=\"coldHotForm\" layout=\"inline\" \n                            onFinish={(value)=>this.handleChangeHotword(value,selectedProject.name,\"cold\")}\n                        >\n                            <Form.Item\n                                name=\"word\"\n                                label=\"热词\"\n                                rules={[{ required: true, message: '请输入热词!' }]}\n                            >\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"hot_value\"\n                                label=\"减少热度\"\n                                rules={[{ required: true, message: '请输入热词热度!' }]}\n                            >\n                                <InputNumber min={1} max={100}/>\n                            </Form.Item>\n                            <Form.Item shouldUpdate={true}>\n                                {() => (\n                                <Button\n                                    htmlType=\"submit\"\n                                    type=\"primary\"\n                                    loading={modelStatus&&modelType==='cold'}\n                                    disabled={modelType==='hot'}\n                                >\n                                    {modelStatus&&modelType==='cold'?'热度训练中':'减少热度'}\n                                </Button>\n                                )}\n                            </Form.Item>\n                        </Form>\n                    </InlineInfoItem>\n                    <FixBox>\n                        <FixInputBox style={{\n                            display: 'flex',\n                            alignItems: 'center',\n                            flexDirection: 'column',\n                            justifyContent: 'center',\n                            height: '208px',\n                        }}>\n                            <FixInputBoxItem>\n                                {/* <FixInputBoxLabel>\n                                    示例音频\n                                </FixInputBoxLabel>\n                                <AudioPlayer src={exampleAudio} controls></AudioPlayer> */}\n                                {/* <Button type=\"primary\" className=\"fixBtn\">下载示例文件</Button> */}\n                                <DownloadBtn\n                                    className=\"fixBtn\"\n                                    style={{ float:'right' }}\n                                    api_url={\"api/v1/hotword/download/?type=demo&name=test\"}\n                                    text=\"下载示例文件\"\n                                    fileName={'hotword_example.wav'}\n                                />\n                            </FixInputBoxItem>\n                            <FixInputBoxItem>\n                                {/* <FixInputBoxLabel>\n                                    上传音频\n                                </FixInputBoxLabel> */}\n                                {/* {this.renderUserAudioInfo({})} */}\n                                {/* <Form name=\"uploadForm\" layout=\"inline\" \n                                    onFinish={this.onFinish}\n                                >\n                                    <Form.Item\n                                        name=\"audioFile\"\n                                        label=\"上传音频\"\n                                        style={{width:'350px'}}\n                                        // rules={[{ required: true, message: '请输入热词!' }]}\n                                    >\n                                        <Dragger\n                                            {...audioUploadProps}\n                                        >\n                                            <p className=\"ant-upload-drag-icon\">\n                                                <InboxOutlined />\n                                            </p>\n                                            <p className=\"ant-upload-text\">支持pcm、wav格式</p>\n                                            <p className=\"ant-upload-hint\">\n                                                支持文件大小不超过10M\n                                            </p>\n                                        </Dragger>\n                                    </Form.Item>\n                                    <Form.Item>\n                                        <Button\n                                            htmlType=\"submit\"\n                                            type=\"primary\"\n                                        >\n                                            识别\n                                        </Button>\n                                    </Form.Item>\n                                </Form> */}\n\n\n                                <Upload {...fileProps}>\n                                    <Button className=\"fixBtn\">\n                                        <UploadOutlined />上传音频文件\n                                    </Button>\n                                </Upload>\n                            </FixInputBoxItem>\n                            <FixInputBoxItem>\n                                <Button\n                                    type=\"primary\"\n                                    className=\"fixBtn\"\n                                    onClick={()=>this.handleUpload(selectedProject.name)}\n                                    // disabled={uploading||fileList.length === 0}\n                                    loading={uploading}\n                                    disabled={modelStatus}\n                                >\n                                    {uploading ? '识别中' : '开始识别'}\n                                </Button>\n                            </FixInputBoxItem>\n                        </FixInputBox>\n                        <FixOutputBox>\n                            <Input.TextArea disabled  value={rulesFixResult} style={{ width: '100%' }} rows={9} placeholder=\"识别结果\" />\n                        </FixOutputBox>\n                        {/* <FixBtn>\n                            <Button type=\"primary\" onClick={()=>handleRulesFix(selectedProject,this.needFixText.state.value)}>识别语音</Button>\n                        </FixBtn> */}\n                    </FixBox>\n                </ContentBox>\n            </ContentWapper>\n        )\n    }\n\n    componentDidMount(){\n        this.props.pageInit()\n    }\n\n\n    reload = () => {\n        this.componentDidMount()\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        projects: state.getIn(['hotword','projects']),\n        hotwordCorrections: state.getIn(['hotword','corrections']),\n        selectedProject: state.getIn(['hotword','selectedProject']),\n        rulesFixResult: state.getIn(['hotword','rulesFixResult'])\n    }\n}\n\nconst mapDispatch = (dispatch) =>({\n    pageInit(){\n        dispatch(actionCreators.handlePageInit())\n    },\n    handleChangeSelectedProject(project){\n        dispatch(actionCreators.handleChangeSelectedProject(project))\n    },\n    handleFix(result){\n        dispatch(actionCreators.changeFixResult(result))\n    }\n})\n\nexport default connect(mapStateToProps,mapDispatch)(HotwordUpdate);"],"sourceRoot":""}