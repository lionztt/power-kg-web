{"version":3,"sources":["components/downloadBtn/index.js","../node_modules/@ant-design/icons-svg/es/asn/DownloadOutlined.js","../node_modules/@ant-design/icons/es/icons/DownloadOutlined.js","pages/autotraining/trainModel/style.js","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleTwoTone.js","../node_modules/@ant-design/icons/es/icons/CheckCircleTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/CloseCircleTwoTone.js","../node_modules/@ant-design/icons/es/icons/CloseCircleTwoTone.js","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js","pages/autotraining/trainModel/index.js"],"names":["FileDown","props","handleDownFile","event","api_url","fileName","preventDefault","stopPropagation","setState","loadingStatus","buttonDisabled","instance","axios","create","baseURL","responseType","timeout","headers","url","get","then","res","console","log","backEndFileName","split","replace","length","loadTxtFile","data","catch","error","state","content","aLink","document","createElement","blob","Blob","type","download","href","URL","createObjectURL","body","appendChild","evt","createEvent","initEvent","dispatchEvent","removeChild","revokeObjectURL","this","text","style","className","btnType","btnDisabled","placement","title","onClick","disabled","loading","size","icon","PureComponent","proTypes","PropTypes","isRequired","defaultProps","DownloadOutlined","ref","React","AntdIcon","Object","assign","DownloadOutlinedSvg","displayName","ContentWapper","styled","main","ContentBox","div","AddBtnWapper","CheckCircleTwoTone","primaryColor","secondaryColor","CheckCircleTwoToneSvg","CloseCircleTwoTone","CloseCircleTwoToneSvg","EditOutlined","EditOutlinedSvg","Column","Table","Option","Select","moment","locale","layout","labelCol","span","wrapperCol","tailLayout","offset","TrainModel","visible","formLoading","showModal","myData","JSON","parse","stringify","am_model","file_id","train_set","map","item","test_set","handleFinish","values","modelType","params_opt","task_name","task_type","task_id","post","params","reload","handleCancel","e","componentDidMount","onCancel","footer","destroyOnClose","name","initialValues","onFinish","Item","label","rules","required","message","envs","value","key","display_name","acousticModels","user_filename","mode","trainSets","testSets","valuePropName","htmlType","cancel","tableData","handleDeleteTableItem","marginRight","env_name","renderModal","dataSource","rowKey","record","width","align","dataIndex","render","fontSize","twoToneColor","task_status","format","index","onConfirm","okText","cancelText","DeleteOutlined","handleInitTableData","handleInitEnvData","handleInitAcousticModelsData","handleInitTrainSetsData","handleInitTestSetsData","Component","connect","getIn","dispatch","actionCreators","handleChangeEnv","audioActionCreators","trainSetActionCreators","testSetActionCreators"],"mappings":"iNAiBMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA8BVC,eAAiB,SAACC,EAAOC,EAAQC,GAC7BF,EAAMG,iBACNH,EAAMI,kBAEN,EAAKC,SAAS,CACVC,eAAe,EACfC,gBAAgB,IAGpB,IAAIC,EAAWC,IAAMC,OAAO,CACxBC,QAAQ,4BACRC,aAAa,OACbC,QAAQ,IACRC,QAAQ,CAAC,eAAe,yBAExBC,EAAMd,EAEVO,EAASQ,IAAID,GAAKE,MAAK,SAAAC,GACnBC,QAAQC,IAAIF,GACZ,IAAIG,EAAkB,GACnBH,EAAIJ,UAEHO,EAAkBH,EAAIJ,QAAQ,uBAAuBQ,MAAM,aAAa,GAAGC,QAAQ,KAAK,IACxFJ,QAAQC,IAAIC,IAEbA,EAAgBG,OAAO,IACtBtB,EAAWmB,GAEf,EAAKI,YAAYvB,EAASgB,EAAIQ,KAAKX,GACnC,EAAKV,SAAS,CACVC,eAAe,EACfC,gBAAgB,OAErBoB,OAAM,SAACC,GAEN,EAAKvB,SAAS,CACVC,eAAe,EACfC,gBAAgB,IAEpBY,QAAQC,IAAI,uCAAUQ,OApE1B,EAAKC,MAAQ,CACTvB,eAAe,EACfC,gBAAgB,GAJL,E,wDAQPL,EAAU4B,EAAQf,GAC1BI,QAAQC,IAAIU,GACZ,IAAIC,EAAQC,SAASC,cAAc,KAC/BC,EAAO,IAAIC,KAAK,CAACL,GAAU,CAC3BM,KAAM,6BAEVL,EAAMM,SAAWnC,EACjB6B,EAAMO,KAAOC,IAAIC,gBAAgBN,GAIjCF,SAASS,KAAKC,YAAYX,GAC1B,IAAIY,EAAMX,SAASY,YAAY,eAC/BD,EAAIE,UAAU,SAAS,GAAO,GAC9Bd,EAAMe,cAAcH,GACpBX,SAASS,KAAKM,YAAYhB,GAE1BQ,IAAIS,gBAAgBd,K,+BAiDhB,IAAD,SACkEe,KAAKnD,MAAvEG,EADA,EACAA,QAASiD,EADT,EACSA,KAAMC,EADf,EACeA,MAAOC,EADtB,EACsBA,UAAWC,EADjC,EACiCA,QAASnD,EAD1C,EAC0CA,SAASoD,EADnD,EACmDA,YADnD,EAEiCL,KAAKpB,MAAtCvB,EAFA,EAEAA,cAAeC,EAFf,EAEeA,eAEtB,MAAa,YAAV8C,EAEK,kBAAC,IAAD,CAASE,UAAU,aAAaC,MAAON,GACnC,kBAAC,IAAD,CACId,KAAK,UACLe,MAAOA,EACPC,UAAWA,EACXK,QAAS,SAACzD,GAAD,OAAW,EAAKD,eAAeC,EAAOC,EAAQC,IACvDwD,SAAUnD,GAAgB+C,EAC1BK,SAAUrD,EACVsD,KAAK,QACLC,KAAM,kBAAC,IAAD,SAMpB,kBAAC,IAAD,CACEzB,KAAK,UACLe,MAAOA,EAEPC,UAAWA,EACXK,QAAS,SAACzD,GAAD,OAAW,EAAKD,eAAeC,EAAOC,EAASC,IACxDwD,SAAUnD,GAAgB+C,EAC1BK,SAAUrD,GAETA,EAAgB4C,EAAO,6B,GAzGTY,iBAgHvBjE,EAASkE,SAAW,CAClB9D,QAAS+D,IAAUC,YAGrBpE,EAASqE,aAAe,CACtBhB,KAAM,2BACNW,KAAM,WACNT,UAAW,GACXE,aAAY,GAECzD,O,4CCzIAsE,EADQ,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oTAAwT,KAAQ,WAAY,MAAS,Y,SCK/eA,EAAmB,SAA0BrE,EAAOsE,GACtD,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAI1E,EAAO,CAC5DsE,IAAKA,EACLP,KAAMY,MAIVN,EAAiBO,YAAc,mBAChBL,iBAAiBF,I,iwCCZzB,IAAMQ,EAAgBC,IAAOC,KAAV,KAGbC,EAAaF,IAAOG,IAAV,KAkCVC,EAAeJ,IAAOG,IAAV,K,SCrCVE,EADU,CAAE,KAAQ,SAAgBC,EAAcC,GAAkB,MAAO,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gLAAiL,KAAQD,IAAkB,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uRAAwR,KAAQC,IAAoB,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,6LAA8L,KAAQD,OAAwB,KAAQ,eAAgB,MAAS,W,SCKnhCD,EAAqB,SAA4BnF,EAAOsE,GAC1D,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAI1E,EAAO,CAC5DsE,IAAKA,EACLP,KAAMuB,MAIVH,EAAmBP,YAAc,qBAClBL,mBAAiBY,GCZjBI,EADU,CAAE,KAAQ,SAAgBH,EAAcC,GAAkB,MAAO,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gLAAiL,KAAQD,IAAkB,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,sXAAuX,KAAQC,IAAoB,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2RAA4R,KAAQD,OAAwB,KAAQ,eAAgB,MAAS,WCKhtCG,EAAqB,SAA4BvF,EAAOsE,GAC1D,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAI1E,EAAO,CAC5DsE,IAAKA,EACLP,KAAMyB,MAIVD,EAAmBX,YAAc,qBAClBL,mBAAiBgB,GCZjBE,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uZAA2Z,KAAQ,OAAQ,MAAS,YCK1kBA,EAAe,SAAsBzF,EAAOsE,GAC9C,OAAOC,gBAAoBC,IAAUC,OAAOC,OAAO,GAAI1E,EAAO,CAC5DsE,IAAKA,EACLP,KAAM2B,MAIVD,EAAab,YAAc,eACZL,mBAAiBkB,G,iBCWxBE,EAAWC,IAAXD,OACAE,EAAWC,IAAXD,OAERE,IAAOC,OAAO,SACd,IAAMC,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,EAAa,CACfD,WAAY,CAAEE,OAAO,EAAGH,KAAM,KAI5BI,E,4MAGFxE,MAAQ,CACJyE,SAAS,EACTlE,KAAK,MACLV,KAAK,GACL6E,aAAY,G,EAIhBC,UAAY,SAACpE,EAAKV,GACd,IAAI+E,EAASC,KAAKC,MAAMD,KAAKE,UAAUlF,IACvCP,QAAQC,IAAIqF,GACZA,EAAOI,SAASJ,EAAOI,SAASC,QAChCL,EAAOM,UAAUN,EAAOM,UAAUC,KAAI,SAAAC,GAAI,OAAGA,EAAKH,WAClDL,EAAOS,SAAST,EAAOS,SAASJ,QAChC,EAAKzG,SAAS,CACViG,SAAS,EACTlE,OACAV,KAAK+E,K,EAcbU,aAAe,SAAAC,GACXjG,QAAQC,IAAIgG,GACZ,EAAK/G,SAAS,CACVkG,aAAY,IAEhB,IAAMc,EAAY,EAAKxF,MAAMO,KAC1BgF,EAAOP,SACNO,EAAOP,SAAS,CAAC,QAAUO,EAAOP,iBAE3BO,EAAOP,SAEfO,EAAOL,UACNK,EAAOL,UAAUK,EAAOL,UAAUC,KAAI,SAAAC,GAAI,MAAG,CAAC,QAAUA,aAEjDG,EAAOL,UAEfK,EAAOF,SACNE,EAAOF,SAAS,CAAC,QAAUE,EAAOF,iBAE3BE,EAAOF,SAEfE,EAAOE,WACNF,EAAOE,WAAW,EAElBF,EAAOE,WAAW,EAGlBF,EAAOG,kBACAH,EAAOG,UAEH,QAAZF,EACCD,EAAOI,UAAU,cACA,SAAZH,IACLD,EAAOK,QAAU,EAAK5F,MAAMH,KAAK+F,QACjCL,EAAOI,UAAU,cAIrBE,YAAK,CAAC3G,IADI,0BACA4G,OAAOP,IAASnG,MAAK,SAAAC,GAC3BC,QAAQC,IAAIF,GACZ,EAAKb,SAAS,CACVkG,aAAY,IAEhB,EAAKqB,YACNjG,OAAM,SAAAT,GACL,EAAKb,SAAS,CACVkG,aAAY,OAIpBpF,QAAQC,IAAIgG,GACZ,EAAK/G,SAAS,CACViG,SAAS,K,EAIjBuB,aAAe,SAAAC,GACX3G,QAAQC,IAAI0G,GACZ,EAAKzH,SAAS,CACdiG,SAAS,K,EAwPbsB,OAAS,WACL,EAAKG,qB,4DAnPL,IAAIV,EAAY,2BAOhB,MANqB,SAAlBpE,KAAKpB,MAAMO,OACViF,EAAY,4BAGhBlG,QAAQC,IAAI6B,KAAKpB,MAAMO,KAAKa,KAAKpB,MAAMH,KAAKuB,KAAKnD,OAG7C,kBAAC,IAAD,CACI0D,MAAO6D,EAAY,eACnBf,QAASrD,KAAKpB,MAAMyE,QAEpB0B,SAAU/E,KAAK4E,aASfI,OAAQ,KACRC,gBAAc,GAEd,kBAAC,IAAD,iBACQnC,EADR,CAEIoC,KAAK,QACLC,cAAenF,KAAKpB,MAAMH,KAC1B2G,SAAUpF,KAAKkE,eAGf,kBAAC,IAAKmB,KAAN,CACIC,MAAM,2BACNJ,KAAK,aAEL,kBAAC,IAAD,CAAOzE,SAA4B,SAAlBT,KAAKpB,MAAMO,QAGhC,kBAAC,IAAKkG,KAAN,CACIC,MAAM,2BACNJ,KAAK,WAELK,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iDAEnC,kBAAC,IAAD,CACIhF,SAA4B,SAAlBT,KAAKpB,MAAMO,MAEpBa,KAAKnD,MAAM6I,KAAK3B,KAAI,SAAAC,GAAI,OACrB,kBAACtB,EAAD,CAAQiD,MAAO3B,EAAKkB,KAAMU,IAAK5B,EAAKkB,MAAOlB,EAAK6B,mBAM5D,kBAAC,IAAKR,KAAN,CACIC,MAAM,2BACNJ,KAAK,YAIL,kBAAC,IAAD,CACIzE,SAA4B,SAAlBT,KAAKpB,MAAMO,MAEpBa,KAAKnD,MAAMiJ,eAAe/B,KAAI,SAAAC,GAAI,OAC/B,kBAACtB,EAAD,CAAQiD,MAAO3B,EAAKH,QAAS+B,IAAK5B,EAAKH,SAAUG,EAAK+B,oBAKlE,kBAAC,IAAKV,KAAN,CACIC,MAAM,qBACNJ,KAAK,aAIL,kBAAC,IAAD,CACIc,KAAK,WACLvF,SAA4B,SAAlBT,KAAKpB,MAAMO,MAEpBa,KAAKnD,MAAMoJ,UAAUlC,KAAI,SAAAC,GAAI,OAC1B,kBAACtB,EAAD,CAAQiD,MAAO3B,EAAKH,QAAS+B,IAAK5B,EAAKH,SAAUG,EAAK+B,oBAKlE,kBAAC,IAAKV,KAAN,CACIC,MAAM,qBACNJ,KAAK,YAIL,kBAAC,IAAD,KACKlF,KAAKnD,MAAMqJ,SAASnC,KAAI,SAAAC,GAAI,OACzB,kBAACtB,EAAD,CAAQiD,MAAO3B,EAAKH,QAAS+B,IAAK5B,EAAKH,SAAUG,EAAK+B,oBAKlE,kBAAC,IAAKV,KAAN,iBACQnC,EADR,CAEIzC,SAA4B,SAAlBT,KAAKpB,MAAMO,KACrB+F,KAAK,aAELiB,cAAc,YAEd,kBAAC,IAAD,8CAGJ,kBAAC,IAAKd,KAASnC,EAIX,kBAAC,IAAD,CAAQxC,QAASV,KAAKpB,MAAM0E,YAAanE,KAAK,UAAUiH,SAAS,UAAjE,iC,+BAUX,IAAD,OAEJ,SAASC,EAAOxB,GACZ3G,QAAQC,IAAI0G,GAHZ,MAKyC7E,KAAKnD,MAA1CyJ,EALJ,EAKIA,UAAWC,EALf,EAKeA,sBAKnB,OAHArI,QAAQC,IAAImI,GAIR,kBAAC5E,EAAD,KACI,kBAACG,EAAD,KACI,kBAACE,EAAD,KACI,kBAAC,IAAD,CAAQ5C,KAAK,UAAUe,MAAO,CAACsG,YAAY,QAAShG,QAASR,KAAK2E,QAAlE,4BAGA,kBAAC,IAAD,CAAQxF,KAAK,UAAUqB,QAAS,kBAAI,EAAK+C,UAAU,MAAM,CACrDe,UAAU,GACVmC,SAAS,EAAK5J,MAAM6I,KAAK,GAAGR,KAC5BtB,SAAS,EAAK/G,MAAMiJ,eAAe,GACnChC,UAAU,GACVG,SAAS,GACTI,YAAW,MANf,6BAWHrE,KAAK0G,cACN,kBAAC,IAAD,CAAOC,WAAYL,EAAWM,OAAQ,SAAC3G,EAAM4G,GAAP,OAAkB5G,EAAKuE,UACzD,kBAAChC,EAAD,CAAQjC,MAAM,2BAAOuG,MAAM,KAAKC,MAAM,SAASC,UAAU,YAAYpB,IAAI,gBACzE,kBAACpD,EAAD,CAAQjC,MAAM,2BAAOuG,MAAM,KAAKC,MAAM,SAASC,UAAU,WAAWpB,IAAI,gBACxE,kBAACpD,EAAD,CAAQjC,MAAM,2BAAOuG,MAAM,MAAMC,MAAM,SAASC,UAAW,CAAC,WAAW,iBAAkBpB,IAAI,eAC7F,kBAACpD,EAAD,CAAQjC,MAAM,qBAAMuG,MAAM,MAAOC,MAAM,SAAQC,UAAU,YAAYpB,IAAI,WAAWqB,OAAQ,SAAChH,EAAK4G,GAAN,OACxF,oCACK5G,EAAKA,EAAK8D,KAAI,SAAAC,GAAI,OAGf,0BAAM4B,IAAK5B,EAAKH,SACXG,EAAK+B,cAAc,iCAG1B,SAGV,kBAACvD,EAAD,CAAQjC,MAAM,qBAAMuG,MAAM,MAAMC,MAAM,SAASC,UAAW,CAAC,WAAW,iBAAkBpB,IAAI,YAC5F,kBAACpD,EAAD,CAAQjC,MAAM,2BAAOuG,MAAM,KAAKC,MAAM,SAASC,UAAU,aAAapB,IAAI,cAAcqB,OACpF,SAAChH,EAAK4G,GAAN,OACW,IAAP5G,EAAS,kBAAC,EAAD,CAAoBC,MAAO,CAACgH,SAAS,QAASC,aAAa,YAAa,kBAAC,EAAD,CAAoBjH,MAAO,CAACgH,SAAS,QAASC,aAAa,eAGpJ,kBAAC3E,EAAD,CAAQjC,MAAM,eAAKuG,MAAM,KAAKC,MAAM,SAASC,UAAU,eAAepB,IAAI,qBAAqBqB,OAAQ,SAAChH,EAAK4G,GAAN,OAC5F,IAAP5G,EAASA,EAAQA,EAAK,OAE1B,kBAACuC,EAAD,CAAQjC,MAAM,eAAKuG,MAAM,KAAKC,MAAM,SAASC,UAAU,eAAepB,IAAI,oBAAqBqB,OAAQ,SAAChH,EAAK4G,GAAN,OAC5F,IAAP5G,EAASA,EAAQA,EAAK,OAE1B,kBAACuC,EAAD,CAAQjC,MAAM,eAAKuG,MAAM,KAAKC,MAAM,SAASC,UAAU,iBAAiBpB,IAAI,iBAAiBqB,OAAQ,SAAChH,EAAK4G,GAAN,OACjG,kBAAC,IAAD,CAAOlG,KAAK,SACR,kBAAC,IAAD,CACI3D,QAAS,2CAA2C6J,EAAOrC,QAC3DpE,QAAQ,UACRC,YAAkC,YAArBwG,EAAOO,YACpBnK,SAAU4J,EAAOvC,UAAUuC,EAAOvC,UAAU,aAAa,mBAOrE,kBAAC9B,EAAD,CAAQjC,MAAM,2BAAOuG,MAAM,MAAMC,MAAM,SAASC,UAAU,aAAapB,IAAI,aAAaqB,OAAQ,SAAChH,GAAD,OAC5F,8BAAO2C,IAAO3C,GAAMoH,OAAO,2BAE/B,kBAAC7E,EAAD,CACIjC,MAAM,eACNqF,IAAI,SACJmB,MAAM,SACND,MAAM,MACNG,OAAQ,SAAChH,EAAM4G,EAAQS,GAAf,OACJ,kBAAC,IAAD,CAAO3G,KAAK,SACR,kBAAC,IAAD,CAASL,UAAU,aAAaC,MAAM,gBAClC,kBAAC,IAAD,CAAQC,QAAS,kBAAI,EAAK+C,UAAU,OAAOsD,IAAS1G,UAAW,WAAYQ,KAAK,QAAQC,KAAM,kBAAC,EAAD,SAElG,kBAAC,IAAD,CAAYL,MAAM,iCAAQgH,UAAW,kBAAIhB,EAAsBe,EAAMT,IAAS9B,SAAUsB,EAAQmB,OAAO,eAAKC,WAAW,gBACnH,kBAAC,IAAD,CAASnH,UAAU,aAAaC,MAAM,gBAClC,kBAAC,IAAD,CAAQpB,KAAK,SAASwB,KAAK,QAAQC,KAAM,kBAAC8G,EAAA,EAAD,mB,0CAqB7E1H,KAAKnD,MAAM8K,sBACX3H,KAAKnD,MAAM+K,oBACX1J,QAAQC,IAAI6B,KAAKnD,MAAMiJ,gBACa,IAAjC9F,KAAKnD,MAAMiJ,eAAenF,MACzBX,KAAKnD,MAAMgL,+BAEgB,IAA5B7H,KAAKnD,MAAMoJ,UAAUtF,MACpBX,KAAKnD,MAAMiL,0BAEe,IAA3B9H,KAAKnD,MAAMqJ,SAASvF,MACnBX,KAAKnD,MAAMkL,6B,GAjVEC,aA0XVC,uBAhCS,SAACrJ,GACrB,MAAO,CACH0H,UAAW1H,EAAMsJ,MAAM,CAAC,aAAa,cACrCxC,KAAK9G,EAAMsJ,MAAM,CAAC,aAAa,SAC/BpC,eAAelH,EAAMsJ,MAAM,CAAC,aAAa,cACzCjC,UAAUrH,EAAMsJ,MAAM,CAAC,WAAW,cAClChC,SAAStH,EAAMsJ,MAAM,CAAC,UAAU,kBAIpB,SAACC,GAAD,MAAc,CAC9BP,kBAD8B,WAE1BO,EAASC,IAAeC,oBAE5BR,6BAJ8B,WAK1BM,EAASG,IAAoBX,wBAEjCG,wBAP8B,WAQ1BK,EAASI,IAAuBZ,wBAEpCI,uBAV8B,WAW1BI,EAASK,IAAsBb,wBAEnCA,oBAb8B,WAc1BQ,EAASC,IAAeT,wBAE5BpB,sBAhB8B,SAgBRe,EAAM7I,GACxB0J,EAASC,IAAe7B,sBAAsBe,EAAM7I,QAK7CwJ,CAAqC7E","file":"static/js/10.a386f4d3.chunk.js","sourcesContent":["/**\n * @desc:这是一个文件下载组件\n * @param:参数说明\n *    api_url:接口地址\n *    icon: 下载图片设置\n *    text: 下载文本设置\n *    downFileBtnClass: 按钮样式设置\n * \n */\nimport React, {PureComponent} from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Tooltip} from 'antd';\nimport {\n    DownloadOutlined\n} from '@ant-design/icons';\nimport axios from 'axios'\n\nclass FileDown extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loadingStatus: true,\n            buttonDisabled: false\n        }\n    }\n\n    loadTxtFile(fileName, content,url){\n        console.log(content)\n        let aLink = document.createElement('a');\n        let blob = new Blob([content], {\n            type: 'application/octet-stream'\n        });\n        aLink.download = fileName;\n        aLink.href = URL.createObjectURL(blob)\n        // aLink.href = url\n        // aLink.click();\n        //此写法兼容可火狐浏览器\n        document.body.appendChild(aLink);\n        var evt = document.createEvent(\"MouseEvents\");\n        evt.initEvent(\"click\", false, false);\n        aLink.dispatchEvent(evt);\n        document.body.removeChild(aLink)\n\n        URL.revokeObjectURL(blob);\n        \n\n    }\n\n    //文件下载操作\n    handleDownFile = (event, api_url,fileName) => {\n        event.preventDefault();\n        event.stopPropagation();\n        //开启loading 按钮置灰\n        this.setState({\n            loadingStatus: false,\n            buttonDisabled: true,\n        });\n\n        let instance = axios.create({\n            baseURL:'http://10.186.0.210:8001/',\n            responseType:'blob',\n            timeout:10000,\n            headers:{\"Content-Type\":\"multipart/form-data\"}\n        })\n        let url = api_url\n\n        instance.get(url).then(res=>{\n            console.log(res)\n            let backEndFileName = \"\"\n            if(res.headers){\n                // let regex1 = /\"(.+?)\"/g;   // \"\" \n                backEndFileName = res.headers['content-disposition'].split('filename=')[1].replace(/\"/g,\"\")\n                console.log(backEndFileName)\n            }\n            if(backEndFileName.length>0){\n                fileName = backEndFileName\n            }\n            this.loadTxtFile(fileName,res.data,url)\n            this.setState({\n                loadingStatus: true,\n                buttonDisabled: false,\n            });\n        }).catch((error) => {\n            //关闭loading 按钮恢复正常\n            this.setState({\n                loadingStatus: false,\n                buttonDisabled: false,\n            });\n            console.log('文件下载失败', error);\n        })\n    };\n\n  render() {\n    const {api_url, text, style, className, btnType, fileName,btnDisabled} = this.props;\n    const {loadingStatus, buttonDisabled} = this.state;\n    // btnType 用于展现不同的下载样式 分为iconBtn wordBtn \n    if(btnType==='iconBtn'){\n        return(\n            <Tooltip placement=\"bottomLeft\" title={text}>\n                <Button \n                    type=\"primary\" \n                    style={style}\n                    className={className}\n                    onClick={(event) => this.handleDownFile(event, api_url,fileName)}\n                    disabled={buttonDisabled||btnDisabled}\n                    loading={!loadingStatus}\n                    size=\"small\" \n                    icon={<DownloadOutlined />}\n                />\n            </Tooltip>\n        )\n    }\n    return (\n      <Button\n        type=\"primary\"\n        style={style}\n        // icon={<DownloadOutlined />}\n        className={className}\n        onClick={(event) => this.handleDownFile(event, api_url, fileName)}\n        disabled={buttonDisabled||btnDisabled}\n        loading={!loadingStatus}\n      >\n        {loadingStatus ? text : '下载中...'}\n      </Button>\n    );\n  }\n}\n\n//定义属性 类型以及是否必填项\nFileDown.proTypes = {\n  api_url: PropTypes.isRequired\n};\n//定义属性的默认值\nFileDown.defaultProps = {\n  text: '文件下载',\n  icon: 'download',\n  className: {},\n  btnDisabled:false\n};\nexport default FileDown;","// This icon file is generated automatically.\nvar DownloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M505.7 661a8 8 0 0012.6 0l112-141.7c4.1-5.2.4-12.9-6.3-12.9h-74.1V168c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v338.3H400c-6.7 0-10.4 7.7-6.3 12.9l112 141.8zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"download\", \"theme\": \"outlined\" };\nexport default DownloadOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DownloadOutlined = function DownloadOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DownloadOutlinedSvg\n  }));\n};\n\nDownloadOutlined.displayName = 'DownloadOutlined';\nexport default React.forwardRef(DownloadOutlined);","import styled from 'styled-components';\n\nexport const ContentWapper = styled.main`\n    margin:30px 10px 0;\n`\nexport const ContentBox = styled.div`\n    background:#fff;\n    padding: 0 20px;\n    min-height: calc(100vh - 156px);\n    & .edit-btn{\n        background: #faad14;\n        color: #fff;\n        border-color: #faad14;\n    }\n    & .edit-btn:focus,.edit-btn:hover{\n        background:#fbc457;\n        border-color: #fbc457;\n    }\n    & .start-btn{\n        background: #52c41a;\n        border-color: #52c41a;\n        color: #fff;\n    }\n    & .start-btn:focus,.start-btn:hover{\n        background: #74d445;\n        border-color: #74d445;\n    }\n    & .stop-btn{\n        background: #181918;\n        border-color: #181918;\n        color: #fff;\n    }\n    & .stop-btn:focus,.stop-btn:hover{\n        background: #656765;\n        border-color: #656765;\n    }\n\n`\n\nexport const AddBtnWapper = styled.div`\n    text-align: right;\n    padding: 20px;\n`\n\n","// This icon file is generated automatically.\nvar CheckCircleTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm193.4 225.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.3 0 19.9 5 25.9 13.3l71.2 98.8 157.2-218c6-8.4 15.7-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.4 12.7z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\", \"fill\": primaryColor } }] }; }, \"name\": \"check-circle\", \"theme\": \"twotone\" };\nexport default CheckCircleTwoTone;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleTwoToneSvg from \"@ant-design/icons-svg/es/asn/CheckCircleTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckCircleTwoTone = function CheckCircleTwoTone(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CheckCircleTwoToneSvg\n  }));\n};\n\nCheckCircleTwoTone.displayName = 'CheckCircleTwoTone';\nexport default React.forwardRef(CheckCircleTwoTone);","// This icon file is generated automatically.\nvar CloseCircleTwoTone = { \"icon\": function render(primaryColor, secondaryColor) { return { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\", \"fill\": primaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 140c-205.4 0-372 166.6-372 372s166.6 372 372 372 372-166.6 372-372-166.6-372-372-372zm171.8 527.1c1.2 1.5 1.9 3.3 1.9 5.2 0 4.5-3.6 8-8 8l-66-.3-99.3-118.4-99.3 118.5-66.1.3c-4.4 0-8-3.6-8-8 0-1.9.7-3.7 1.9-5.2L471 512.3l-130.1-155a8.32 8.32 0 01-1.9-5.2c0-4.5 3.6-8 8-8l66.1.3 99.3 118.4 99.4-118.5 66-.3c4.4 0 8 3.6 8 8 0 1.9-.6 3.8-1.8 5.2l-130.1 155 129.9 154.9z\", \"fill\": secondaryColor } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M685.8 352c0-4.4-3.6-8-8-8l-66 .3-99.4 118.5-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155-130.1 154.9a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3 99.3-118.5L611.7 680l66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.9 512.2l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\", \"fill\": primaryColor } }] }; }, \"name\": \"close-circle\", \"theme\": \"twotone\" };\nexport default CloseCircleTwoTone;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleTwoToneSvg from \"@ant-design/icons-svg/es/asn/CloseCircleTwoTone\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleTwoTone = function CloseCircleTwoTone(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleTwoToneSvg\n  }));\n};\n\nCloseCircleTwoTone.displayName = 'CloseCircleTwoTone';\nexport default React.forwardRef(CloseCircleTwoTone);","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default React.forwardRef(EditOutlined);","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport moment from 'moment'\nimport { Table,Modal, Space, Button, Tooltip, Popconfirm, Form, Input, Checkbox, Select } from 'antd';\n\nimport {actionCreators} from './store'\nimport {actionCreators as audioActionCreators } from '../audioModel/store'\nimport {actionCreators as trainSetActionCreators } from '../trainset/store'\nimport {actionCreators as testSetActionCreators } from '../testset/store'\n\nimport {ContentWapper,ContentBox,AddBtnWapper} from './style'\nimport DownloadBtn from '../../../components/downloadBtn'\nimport {\n    EditOutlined,\n    DeleteOutlined,\n    // PoweroffOutlined,\n    // StopOutlined,\n    CheckCircleTwoTone,\n    // InteractionOutlined,\n    CloseCircleTwoTone\n  } from '@ant-design/icons';\nimport { post } from '../../../utils/ajax';\n\n// import Modal from '../../../components/sharedFormModal'\n\nconst { Column } = Table;\nconst { Option } = Select;\n\nmoment.locale('zh-cn');  \nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n    wrapperCol: { offset:6, span: 16 },\n};\n// const [form] = Form.useForm();\n\nclass TrainModel extends Component{\n    \n    \n    state = { \n        visible: false ,\n        type:'add',\n        data:{},\n        formLoading:false\n        \n    };\n\n    showModal = (type,data) => {\n        let myData = JSON.parse(JSON.stringify(data))\n        console.log(myData)\n        myData.am_model=myData.am_model.file_id\n        myData.train_set=myData.train_set.map(item=>(item.file_id))\n        myData.test_set=myData.test_set.file_id\n        this.setState({\n            visible: true,\n            type,\n            data:myData\n        });\n\n//    let a = {\n//         am_model:{file_id: \"90fb855c-405b-47ab-bffc-7ce42b534dd9\"},\n//         env_name: \"test\",\n//         params_opt: 1,\n//         task_id: \"9a691eaa-5178-47a0-9385-74dc19b04fc2\",\n//         task_type: \"start_test\",\n//         test_set:{file_id: \"2c6d8a61-b2f9-4ee6-a616-6aedd693da64\"},\n//         train_set:[{file_id: \"5462a517-f942-4d9f-a8ab-9ffa7c56ac63\"},{file_id: \"5cc28f8c-16a2-4c8f-b03e-e190477b5e06\"}]\n//     }\n    };\n\n    handleFinish = values => {\n        console.log(values)\n        this.setState({\n            formLoading:true\n        })\n        const modelType = this.state.type\n        if(values.am_model){\n            values.am_model={\"file_id\":values.am_model}\n        }else{\n            delete values.am_model\n        }\n        if(values.train_set){\n            values.train_set=values.train_set.map(item=>({\"file_id\":item}))\n        }else{\n            delete values.train_set\n        }\n        if(values.test_set){\n            values.test_set={\"file_id\":values.test_set}\n        }else{\n            delete values.test_set\n        }\n        if(values.params_opt){\n            values.params_opt=1\n        }else{\n            values.params_opt=0\n        }\n\n        if(!values.task_name){\n            delete values.task_name\n        }\n        if(modelType==='add'){\n            values.task_type=\"start_train\"\n        }else if(modelType==='edit'){\n            values.task_id = this.state.data.task_id\n            values.task_type=\"start_test\"\n        }\n\n        let url = 'api/v1/auto-lm/lm-task/'\n        post({url,params:values}).then(res=>{\n            console.log(res)\n            this.setState({\n                formLoading:false\n            })\n            this.reload()\n        }).catch(res=>{\n            this.setState({\n                formLoading:false\n            })\n        })\n\n        console.log(values)\n        this.setState({\n            visible: false,\n        });\n    };\n\n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n        visible: false,\n        });\n    };\n\n    renderModal(){\n\n        let modelType = \"添加任务\"\n        if(this.state.type===\"edit\"){\n            modelType = \"编辑任务\"\n        }\n\n        console.log(this.state.type,this.state.data,this.props)\n\n        return(\n            <Modal\n                title={modelType + \"任务\"}\n                visible={this.state.visible}\n                // onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                // footer={[\n                //     <Button key=\"back\" onClick={this.handleCancel}>\n                //       取消\n                //     </Button>,\n                //     <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n                //       开始解码\n                //     </Button>,\n                // ]}\n                footer={null}\n                destroyOnClose\n            >\n                <Form\n                    {...layout}\n                    name=\"basic\"\n                    initialValues={this.state.data}\n                    onFinish={this.handleFinish}\n                    // form={form}\n                >\n                    <Form.Item\n                        label=\"任务名称\"\n                        name=\"task_name\"\n                    >\n                        <Input disabled={this.state.type===\"edit\"}/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"训练环境\"\n                        name=\"env_name\"\n                        // initialValue={this.props.envs[0].env_name}\n                        rules={[{ required: true, message: '请选择训练环境!' }]}\n                    >\n                        <Select \n                            disabled={this.state.type===\"edit\"}\n                        >\n                            {this.props.envs.map(item=>(\n                                <Option value={item.name} key={item.name}>{item.display_name}</Option>\n                            ))}\n                            \n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"声学模型\"\n                        name=\"am_model\"\n                        // initialValue={this.props.acousticModels[0].am_model}\n                        // rules={[{ required: true, message: '请选择声学模型!' }]}\n                    >\n                        <Select \n                            disabled={this.state.type===\"edit\"}\n                        >\n                            {this.props.acousticModels.map(item=>(\n                                <Option value={item.file_id} key={item.file_id}>{item.user_filename}</Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"训练集\"\n                        name=\"train_set\"\n                        // initialValue={this.props.trainSets[0].train_set}\n                        // rules={[{ required: true, message: '请选择训练集!' }]}\n                    >\n                        <Select \n                            mode=\"multiple\"\n                            disabled={this.state.type===\"edit\"}\n                        >\n                            {this.props.trainSets.map(item=>(\n                                <Option value={item.file_id} key={item.file_id}>{item.user_filename}</Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"测试集\"\n                        name=\"test_set\"\n                        // initialValue={this.props.testSets[0].test_set}\n                        // rules={[{ required: true, message: '请选择测试集!' }]}\n                    >\n                        <Select>\n                            {this.props.testSets.map(item=>(\n                                <Option value={item.file_id} key={item.file_id}>{item.user_filename}</Option>\n                            ))}\n                        </Select>\n                    </Form.Item>\n\n                    <Form.Item \n                        {...tailLayout} \n                        disabled={this.state.type===\"edit\"} \n                        name=\"params_opt\" \n                        // initialValue={false}\n                        valuePropName=\"checked\"\n                    >\n                        <Checkbox>优化解码参数</Checkbox>\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        {/* <Button key=\"back\" onClick={this.handleCancel}>\n                            取消\n                        </Button> */}\n                        <Button loading={this.state.formLoading} type=\"primary\" htmlType=\"submit\">\n                            开始解码\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Modal>\n            // <Modal name={modelType} children={}/>\n        )\n    }\n\n    render(){\n          \n        function cancel(e) {\n            console.log(e);\n        }\n        const { tableData, handleDeleteTableItem } = this.props;\n        \n        console.log(tableData)\n\n\n        return(\n            <ContentWapper>\n                <ContentBox>\n                    <AddBtnWapper>\n                        <Button type=\"primary\" style={{marginRight:'10px'}} onClick={this.reload}>\n                            刷新页面\n                        </Button>\n                        <Button type=\"primary\" onClick={()=>this.showModal(\"add\",{\n                            task_name:'',\n                            env_name:this.props.envs[0].name,\n                            am_model:this.props.acousticModels[0],\n                            train_set:[],\n                            test_set:'',\n                            params_opt:false\n                        })}>\n                            添加任务\n                        </Button>\n                    </AddBtnWapper>\n                    {this.renderModal()}\n                    <Table dataSource={tableData} rowKey={(text, record) => text.task_id}>\n                        <Column title=\"任务名称\" width=\"8%\" align=\"center\" dataIndex=\"task_name\" key=\"projectName\" />\n                        <Column title=\"训练环境\" width=\"8%\" align=\"center\" dataIndex=\"env_name\" key=\"environment\" />\n                        <Column title=\"声学模型\" width=\"10%\" align=\"center\" dataIndex={['am_model','user_filename']} key=\"audioModel\"/>\n                        <Column title=\"训练集\" width=\"16%\"  align=\"center\"dataIndex=\"train_set\" key=\"trainSet\" render={(text,record)=>(\n                            <>\n                                {text?text.map(item=>\n                                (\n                                \n                                    <span key={item.file_id}>\n                                        {item.user_filename}<br/>\n                                    </span>\n                                )\n                                ):null}\n                            </>\n                        )} />\n                        <Column title=\"测试集\" width=\"10%\" align=\"center\" dataIndex={['test_set','user_filename']} key=\"testSet\" />\n                        <Column title=\"解码优化\" width=\"8%\" align=\"center\" dataIndex=\"params_opt\" key=\"isOptimised\" render={\n                            (text,record)=>(\n                                text===1?<CheckCircleTwoTone style={{fontSize:'20px'}} twoToneColor=\"#52c41a\" />:<CloseCircleTwoTone style={{fontSize:'20px'}} twoToneColor=\"#ff4d4f\"/>\n                            )\n                        } />\n                        <Column title=\"字准\" width=\"7%\" align=\"center\" dataIndex=\"test_set_wer\" key=\"testWordPercentage\" render={(text,record)=>(\n                            text===0?text:\"\"+text+\"%\"\n                        )} />\n                        <Column title=\"句准\" width=\"7%\" align=\"center\" dataIndex=\"test_set_ser\" key=\"testSenPercentage\"  render={(text,record)=>(\n                            text===0?text:\"\"+text+\"%\"\n                        )} />\n                        <Column title=\"解码\" width=\"8%\" align=\"center\" dataIndex=\"testDecodeFile\" key=\"testDecodeFile\" render={(text,record)=>(\n                            <Space size=\"small\">\n                                <DownloadBtn\n                                    api_url={\"api/v1/auto-lm/download/?type=decode&id=\"+record.task_id}\n                                    btnType=\"iconBtn\"\n                                    btnDisabled={record.task_status!=='SUCCESS'}\n                                    fileName={record.task_name?record.task_name+'decode.txt':'decode.txt'}\n                                />\n                                {/* <Tooltip placement=\"bottomLeft\" title='下载解码文件'>\n                                    <Button type=\"primary\" disabled={record.task_status!=='SUCCESS'} size=\"small\" icon={<DownloadOutlined />}></Button>\n                                </Tooltip> */}\n                            </Space>\n                        )}/>\n                        <Column title=\"更新时间\" width=\"10%\" align=\"center\" dataIndex=\"updated_at\" key=\"createTime\" render={(text)=>(\n                            <span>{moment(text).format(\"YYYY-MM-DD HH:mm:ss\")}</span>\n                        )}/>\n                        <Column\n                            title=\"操作\"\n                            key=\"action\"\n                            align=\"center\"\n                            width=\"12%\"\n                            render={(text, record, index) => (\n                                <Space size=\"small\">\n                                    <Tooltip placement=\"bottomLeft\" title='修改'>\n                                        <Button onClick={()=>this.showModal(\"edit\",record)} className={\"edit-btn\"} size=\"small\" icon={<EditOutlined />}></Button>\n                                    </Tooltip>\n                                    <Popconfirm title=\"确认删除？\" onConfirm={()=>handleDeleteTableItem(index,record)} onCancel={cancel} okText=\"确定\" cancelText=\"取消\">\n                                        <Tooltip placement=\"bottomLeft\" title='删除'>\n                                            <Button type=\"danger\" size=\"small\" icon={<DeleteOutlined />}></Button>\n                                        </Tooltip>\n                                    </Popconfirm>\n                                    {/* <Tooltip placement=\"bottomLeft\" title='启动'>\n                                        <Button loading={false} className={\"start-btn\"} size=\"small\" icon={<PoweroffOutlined />}></Button>\n                                    </Tooltip>\n                                    <Popconfirm title=\"确认停止？\" onConfirm={confirm} onCancel={cancel} okText=\"确定\" cancelText=\"取消\">\n                                        <Tooltip placement=\"bottomLeft\" title='停止'>\n                                            <Button className={\"stop-btn\"} size=\"small\" icon={<StopOutlined />}></Button>\n                                        </Tooltip>\n                                    </Popconfirm> */}\n                                </Space>\n                            )}\n                        />\n                    </Table>\n                </ContentBox>\n            </ContentWapper>\n        )\n    }\n\n    componentDidMount(){\n        this.props.handleInitTableData()\n        this.props.handleInitEnvData()\n        console.log(this.props.acousticModels)\n        if(this.props.acousticModels.size===0){\n            this.props.handleInitAcousticModelsData()\n        }\n        if(this.props.trainSets.size===0){\n            this.props.handleInitTrainSetsData()\n        }\n        if(this.props.testSets.size===0){\n            this.props.handleInitTestSetsData()\n        }\n    }\n\n    reload = () => {\n        this.componentDidMount()\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        tableData: state.getIn(['trainModel','tableData']),\n        envs:state.getIn(['trainModel','envs']),\n        acousticModels:state.getIn(['audioModel','tableData']),\n        trainSets:state.getIn(['trainSet','tableData']),\n        testSets:state.getIn(['testSet','tableData']),\n    }\n}\n\nconst mapDispatch = (dispatch) =>({\n    handleInitEnvData(){\n        dispatch(actionCreators.handleChangeEnv())\n    },\n    handleInitAcousticModelsData(){\n        dispatch(audioActionCreators.handleInitTableData())\n    },\n    handleInitTrainSetsData(){\n        dispatch(trainSetActionCreators.handleInitTableData())\n    },\n    handleInitTestSetsData(){\n        dispatch(testSetActionCreators.handleInitTableData())\n    },\n    handleInitTableData(){\n        dispatch(actionCreators.handleInitTableData())\n    },\n    handleDeleteTableItem(index,data){\n        dispatch(actionCreators.handleDeleteTableItem(index,data))\n        // message.success('删除成功');\n    }\n})\n\nexport default connect(mapStateToProps,mapDispatch)(TrainModel);"],"sourceRoot":""}